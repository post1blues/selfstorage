# Generated by Django 3.2.9 on 2021-11-19 12:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='стоимость заказа')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата создания')),
                ('start_of_storage', models.DateField(default=django.utils.timezone.now, verbose_name='дата окончания хранения')),
                ('end_of_storage', models.DateField(verbose_name='дата окончания хранения')),
                ('comment', models.TextField(blank=True, verbose_name='комментарий к заказу')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
            },
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='наименование контейнера')),
                ('size', models.PositiveIntegerField(verbose_name='размер контейнера')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='цена аренды')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата добавления')),
            ],
            options={
                'verbose_name': 'контейнер',
                'verbose_name_plural': 'контейнеры',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=200, verbose_name='ФИО')),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='нормализированный номер телефона')),
                ('pure_phonenumber', models.CharField(max_length=20, verbose_name='номер телефона')),
                ('address', models.CharField(max_length=100, verbose_name='адрес')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата создания')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='электронная почта')),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.PositiveIntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='сумма')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата создания платежа')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата обновления платежа')),
                ('is_success', models.BooleanField(verbose_name='статус оплаты')),
            ],
            options={
                'verbose_name': 'платёж',
                'verbose_name_plural': 'платежи',
            },
        ),
        migrations.CreateModel(
            name='SeasonService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='название товара')),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('price_per_week', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='цена хранения на неделю')),
                ('price_per_month', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='цена хранения на месяц')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата добавления')),
            ],
            options={
                'verbose_name': 'сезонная вещь',
                'verbose_name_plural': 'сезонные вещи',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='название')),
                ('address', models.CharField(max_length=100, verbose_name='адрес')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата добавления')),
            ],
            options={
                'verbose_name': 'склад',
                'verbose_name_plural': 'склады',
            },
        ),
        migrations.CreateModel(
            name='SeasonOrder',
            fields=[
                ('baseorder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='selfstorage.baseorder')),
            ],
            options={
                'verbose_name': 'сезонное хранение',
                'verbose_name_plural': 'сезонное хранение',
            },
            bases=('selfstorage.baseorder',),
        ),
        migrations.AddField(
            model_name='baseorder',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='selfstorage.customer', verbose_name='клиент'),
        ),
        migrations.AddField(
            model_name='baseorder',
            name='payment',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order', to='selfstorage.payment', verbose_name='платёж'),
        ),
        migrations.AddField(
            model_name='baseorder',
            name='storage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='selfstorage.storage', verbose_name='склад'),
        ),
        migrations.CreateModel(
            name='StorageOrder',
            fields=[
                ('baseorder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='selfstorage.baseorder')),
                ('box', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='selfstorage.box', verbose_name='бокс')),
            ],
            options={
                'verbose_name': 'заказ бокса',
                'verbose_name_plural': 'заказы боксов',
            },
            bases=('selfstorage.baseorder',),
        ),
    ]
